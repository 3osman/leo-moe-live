exports[`searchbar renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <CardPanel
    className="Searchbar">
    <Link
        onClick={[Function]}
        onlyActiveOnIndex={false}
        style={Object {}}>
        <Button
            className="red lighten-2 search-button"
            disabled={true}
            floating={true}
            icon="search"
            large={true}
            node="button"
            waves="light" />
    </Link>
    <input
        className="search-text grey-text grey-darken-4"
        name="search"
        onChange={[Function]}
        onKeyPress={[Function]}
        placeholder="Search live stream.."
        type="text"
        value="" />
</CardPanel>,
  "nodes": Array [
    <CardPanel
      className="Searchbar">
      <Link
            onClick={[Function]}
            onlyActiveOnIndex={false}
            style={Object {}}>
            <Button
                  className="red lighten-2 search-button"
                  disabled={true}
                  floating={true}
                  icon="search"
                  large={true}
                  node="button"
                  waves="light" />
      </Link>
      <input
            className="search-text grey-text grey-darken-4"
            name="search"
            onChange={[Function]}
            onKeyPress={[Function]}
            placeholder="Search live stream.."
            type="text"
            value="" />
</CardPanel>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Searchbar
        periscope="true"
        twitch="true"
        youtube="true" />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Searchbar {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleChange": [Function],
        "handleKeyPress": [Function],
        "props": Object {
          "periscope": "true",
          "twitch": "true",
          "youtube": "true",
        },
        "refs": Object {},
        "search": [Function],
        "setSearchService": [Function],
        "state": Object {
          "periscope": "true",
          "twitch": "true",
          "value": "",
          "youtube": "true",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <CardPanel
          className="Searchbar">
          <Link
                    onClick={[Function]}
                    onlyActiveOnIndex={false}
                    style={Object {}}>
                    <Button
                              className="red lighten-2 search-button"
                              disabled={true}
                              floating={true}
                              icon="search"
                              large={true}
                              node="button"
                              waves="light" />
          </Link>
          <input
                    className="search-text grey-text grey-darken-4"
                    name="search"
                    onChange={[Function]}
                    onKeyPress={[Function]}
                    placeholder="Search live stream.."
                    type="text"
                    value="" />
</CardPanel>,
        "_debugID": 2,
        "_renderedOutput": <CardPanel
          className="Searchbar">
          <Link
                    onClick={[Function]}
                    onlyActiveOnIndex={false}
                    style={Object {}}>
                    <Button
                              className="red lighten-2 search-button"
                              disabled={true}
                              floating={true}
                              icon="search"
                              large={true}
                              node="button"
                              waves="light" />
          </Link>
          <input
                    className="search-text grey-text grey-darken-4"
                    name="search"
                    onChange={[Function]}
                    onKeyPress={[Function]}
                    placeholder="Search live stream.."
                    type="text"
                    value="" />
</CardPanel>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Searchbar
    periscope="true"
    twitch="true"
    youtube="true" />,
}
`;
